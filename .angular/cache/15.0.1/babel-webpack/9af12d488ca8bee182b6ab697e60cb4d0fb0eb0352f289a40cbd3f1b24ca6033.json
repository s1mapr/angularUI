{"ast":null,"code":"export class Title {\n  constructor(id, titleName, typeName, originalAuthor, authorId, creationDate, description, titleImg, released, author, content, categories, tags, serials) {\n    this.creationDate = new Date();\n    this.description = '';\n    this.titleImg = '';\n    this.id = id;\n    this.titleName = titleName;\n    this.typeName = typeName;\n    this.originalAuthor = originalAuthor;\n    this.authorId = authorId;\n    this.creationDate = creationDate;\n    this.description = description;\n    this.titleImg = titleImg;\n    this.content = content;\n    this.categories = categories;\n    this.tags = tags;\n    this.serials = serials;\n    this.released = released;\n    this.author = author;\n  }\n}\nexport class Like {\n  constructor(titleContentId, userId) {\n    this.titleContentId = titleContentId;\n    this.userId = userId;\n  }\n  static getEmptyLike() {\n    return new Like(0, 0);\n  }\n}\nexport class PossibleContent {\n  constructor(categories, tags, serials, types) {\n    this.categories = categories;\n    this.tags = tags;\n    this.serials = serials;\n    this.types = types;\n  }\n}\nexport class Comment {\n  constructor(commentVal, user, titleContent, creationDate) {\n    this.commentVal = commentVal;\n    this.user = user;\n    this.titleContent = titleContent;\n    this.creationDate = creationDate;\n  }\n}\nexport class StaticType {\n  constructor(id, typeName) {\n    this.id = id;\n    this.typeName = typeName;\n  }\n}\nexport class TitleContent {\n  constructor(id, titleId, likes, views, images, comments) {\n    this.likesCount = 0;\n    this.likes = [];\n    this.id = id;\n    this.titleId = titleId;\n    this.likes = likes;\n    this.views = views;\n    this.images = images;\n    this.comments = comments;\n  }\n  static getEmptyContent() {\n    return new TitleContent(0, 0, [], 0, [], []);\n  }\n}\nexport class Image {\n  constructor(id, img64) {\n    this.id = id;\n    this.img64 = img64;\n  }\n  static getEmptyImg() {\n    return new Image(0, \"\");\n  }\n}\nexport class Category {\n  constructor(id, genre, titles) {\n    this.id = id;\n    this.genre = genre;\n    this.titles = titles;\n  }\n  static getEmptyCategory() {\n    return new Category(0, \"\", []);\n  }\n}\nexport class Tag {\n  constructor(id, tagName, titles) {\n    this.id = id;\n    this.tag = tagName;\n    this.titles = titles;\n  }\n  static getEmptyTag() {\n    return new Tag(0, \"\", []);\n  }\n}\nexport class Serial {\n  constructor(id, serialName, titles) {\n    this.id = id;\n    this.serialName = serialName;\n    this.titles = titles;\n  }\n  static getEmptySerial() {\n    return new Serial(0, \"\", []);\n  }\n}","map":{"version":3,"mappings":"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","names":["Title","constructor","id","titleName","typeName","originalAuthor","authorId","creationDate","description","titleImg","released","author","content","categories","tags","serials","Date","Like","titleContentId","userId","getEmptyLike","PossibleContent","types","Comment","commentVal","user","titleContent","StaticType","TitleContent","titleId","likes","views","images","comments","getEmptyContent","Image","img64","getEmptyImg","Category","genre","titles","getEmptyCategory","Tag","tagName","tag","getEmptyTag","Serial","serialName","getEmptySerial"],"sourceRoot":"","sources":["M:\\content-pub-java-go-angular--master\\contentPublicationUI\\src\\app\\title.ts"],"sourcesContent":["import {User} from \"./user\";\n\nexport class Title {\n  public id: number;\n  public titleName: string;\n  public typeName: string;\n  public originalAuthor: string;\n  public authorId: number;\n  public creationDate: Date = new Date();\n  public description: string = '';\n  public titleImg: string = '';\n  public released: boolean;\n  public author: User;\n  public content: TitleContent;\n  public categories: Category[];\n  public tags: Tag[];\n  public serials: Serial[];\n\n\n  constructor(id: number, titleName: string, typeName: string, originalAuthor: string, authorId: number, creationDate: Date, description: string, titleImg: string, released: boolean, author: User, content: TitleContent, categories: Category[], tags: Tag[], serials: Serial[]) {\n    this.id = id;\n    this.titleName = titleName;\n    this.typeName = typeName;\n    this.originalAuthor = originalAuthor;\n    this.authorId = authorId;\n    this.creationDate = creationDate;\n    this.description = description;\n    this.titleImg = titleImg;\n    this.content = content;\n    this.categories = categories;\n    this.tags = tags;\n    this.serials = serials;\n    this.released = released;\n    this.author = author;\n  }\n}\n\nexport class Like {\n  public titleContentId: number\n  public userId: number\n\n\n  constructor(titleContentId: number, userId: number) {\n    this.titleContentId = titleContentId;\n    this.userId = userId;\n  }\n\n  static getEmptyLike(): Like {\n    return new Like(0, 0);\n  }\n}\n\nexport class PossibleContent {\n  public categories: Category[];\n  public tags: Tag[];\n  public serials: Serial[];\n  public types: StaticType[];\n\n\n  constructor(categories: Category[], tags: Tag[], serials: Serial[], types: StaticType[]) {\n    this.categories = categories;\n    this.tags = tags;\n    this.serials = serials;\n    this.types = types;\n  }\n}\n\nexport class Comment {\n  public commentVal: string;\n  public user: User;\n  public titleContent: TitleContent;\n  public creationDate: Date;\n\n\n  constructor(commentVal: string, user: User, titleContent: TitleContent, creationDate: Date) {\n    this.commentVal = commentVal;\n    this.user = user;\n    this.titleContent = titleContent;\n    this.creationDate = creationDate;\n  }\n}\n\nexport class StaticType {\n  public id: number;\n  public typeName: string;\n\n  constructor(id: number, typeName: string) {\n    this.id = id;\n    this.typeName = typeName;\n  }\n}\n\nexport class TitleContent {\n  public id: number;\n  public titleId: number;\n  public likesCount: number = 0;\n  public likes: Like[] = [];\n  public views: number;\n  public images: Image[];\n  public comments: Comment[];\n\n\n  constructor(id: number, titleId: number, likes: Like[], views: number, images: Image[], comments: Comment[]) {\n    this.id = id;\n    this.titleId = titleId;\n    this.likes = likes;\n    this.views = views;\n    this.images = images;\n    this.comments = comments;\n  }\n\n  static getEmptyContent(): TitleContent {\n    return new TitleContent(0, 0, [], 0, [], []);\n  }\n}\n\nexport class Image {\n  public id: number;\n  public img64: string;\n\n  constructor(id: number, img64: string) {\n    this.id = id;\n    this.img64 = img64;\n  }\n\n  static getEmptyImg(): Image {\n    return new Image(0, \"\");\n  }\n}\n\n\nexport class Category {\n  public id: number;\n  public genre: string;\n  public titles: Title[];\n\n\n  constructor(id: number, genre: string, titles: Title[]) {\n    this.id = id;\n    this.genre = genre;\n    this.titles = titles;\n  }\n\n  static getEmptyCategory(): Category {\n    return new Category(0, \"\", []);\n  }\n}\n\nexport class Tag {\n  public id: number;\n  public tag: string;\n  public titles: Title[];\n\n\n  constructor(id: number, tagName: string, titles: Title[]) {\n    this.id = id;\n    this.tag = tagName;\n    this.titles = titles;\n  }\n\n  static getEmptyTag(): Tag {\n    return new Tag(0, \"\", []);\n  }\n}\n\nexport class Serial {\n  public id: number;\n  public serialName: string;\n  public titles: Title[];\n\n  constructor(id: number, serialName: string, titles: Title[]) {\n    this.id = id;\n    this.serialName = serialName;\n    this.titles = titles;\n  }\n\n  static getEmptySerial(): Serial {\n    return new Serial(0, \"\", []);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}